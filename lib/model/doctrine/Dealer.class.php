<?php

/**
 * Dealer
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Dealer extends BaseDealer
{

    const TYPE_PKW = 1;
    const TYPE_NFZ = 2;
    const TYPE_NFZ_PKW = 3;

    function getShortNumber()
    {
        return substr($this->getNumber(), -$this->getNumberLength());
    }

    function __toString()
    {
        return '<span style="display: inline-block; width: 36px;">' . $this->getShortNumber() . '</span> ' . $this->getName();
    }

    public function getSimpleName()
    {
        return $this->getName();
    }

    public function getNameAndNumber() {
        return sprintf('[%s] - %s', $this->getShortNumber(), $this->getName());
    }

    public function isPKW() {
        return $this->getDealerType() == self::TYPE_PKW;
    }

    public function isNFZ() {
        return $this->getDealerType() == self::TYPE_NFZ;
    }

    public function isNFZ_PKW() {
        return $this->getDealerType() == self::TYPE_NFZ_PKW;
    }

    public function getDealerTypeLabel() {
        if ($this->isPKW()) {
            return 'PKW';
        } else if ($this->isNFZ()) {
            return 'NFZ ';
        } else {
            return 'PKW+NFZ';
        }
    }

    /**
     * Get pkw manager label
     * @return string
     */
    public function getPkwManagerName() {
        if (!is_null($this->regional_manager_id)) {
            $regional_manager = NaturalPersonTable::getInstance()->find($this->regional_manager_id);
            if ($regional_manager) {
                return sprintf('%s %s', $regional_manager->getSurname(), $regional_manager->getFirstname());
            }
        }

        return '';
    }

    /**
     * Получить название группы привязанной к дилеру
     * @param $type
     * @return string
     */
    public function getDealerGroupHeader($type) {
        $dealer_group = DealersGroupsTable::getInstance()->createQuery()->where('id = ? and dealer_type = ?', array($this->getDealerGroupId(), $type))->fetchOne();
        if ($dealer_group) {
            return $dealer_group->getHeader();
        }

        return '';
    }
}
