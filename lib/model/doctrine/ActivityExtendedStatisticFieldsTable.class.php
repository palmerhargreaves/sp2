<?php

/**
 * ActivityExtendedStatisticFieldsTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ActivityExtendedStatisticFieldsTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object ActivityExtendedStatisticFieldsTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('ActivityExtendedStatisticFields');
    }

    public static function getConceptInfoByUserActivity($user)
    {
        $user = $user->getAuthUser();

        $userDealer = $user->getDealerUsers()->getFirst();
        $dealer = null;
        if ($userDealer)
            $dealer = DealerTable::getInstance()->createQuery('d')->where('id = ?', $userDealer->getDealerId())->fetchOne();

        if (!$dealer)
            return '';

        //$field = ActivityExtendedStatisticFieldsDataTable::getInstance()->createQuery()->where('field_id = ? and user_id = ? and dealer_id = ?', array($this->getId(), $user->getId(), $dealer->getId()))->fetchOne();
        $concept = ActivityExtendedStatisticFieldsDataTable::getInstance()->createQuery()->where('dealer_id = ?', array($dealer->getId()))->groupBy('concept_id')->execute();
        if ($concept && $concept->count() > 0)
            return $concept->getFirst();

        return null;
    }

    public static function checkUserConcept($user, $concept)
    {
        if (is_numeric($user)) {
            $dealerId = $user;
        } else {
            $user = $user->getAuthUser();

            $userDealer = $user->getDealerUsers()->getFirst();
            $dealer = null;
            if ($userDealer)
                $dealer = DealerTable::getInstance()->createQuery('d')->where('id = ?', $userDealer->getDealerId())->fetchOne();

            if (!$dealer)
                return '';

            $dealerId = $dealer->getId();
        }

        //$field = ActivityExtendedStatisticFieldsDataTable::getInstance()->createQuery()->where('field_id = ? and user_id = ? and dealer_id = ?', array($this->getId(), $user->getId(), $dealer->getId()))->fetchOne();
        if (ActivityExtendedStatisticFieldsDataTable::getInstance()->createQuery()->where('dealer_id = ? and concept_id = ?', array($dealerId, $concept->getId()))->count() > 0) {
            return true;
        }

        return null;
    }
}