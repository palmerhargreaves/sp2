<?php

/**
 * BudgetCalendarTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class BudgetCalendarTable extends Doctrine_Table
{
    const MAX_YEARS = 5;

	private static $_days = array();
    private static $_year = null;

    /**
     * Returns an instance of this class.
     *
     * @return object BudgetCalendarTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('BudgetCalendar');
    }

    public static function getDays($year, $special = false) {
        if(empty($year)) {
            $year = date('Y');
        }

        if (self::$_year != $year) {
            self::$_year = $year;
            self::$_days = array();

            $items = self::getInstance()->createQuery()->select('quarter, day')->where('year = ?', $year)->execute(array(), Doctrine_Core::HYDRATE_ARRAY);
            foreach ($items as $item) {
                self::$_days[$item['quarter']] = $item['day'];
            }
        }

        return self::$_days;
    }

    public static function getQuarters($year) {
        $year = $year ? $year : date('Y');

        $quarters = self::getInstance()->createQuery()->select('*')->where('year = ?', $year)->orderBy('quarter')->execute();
        if(count($quarters) == 0) {
            for($i = 1; $i <= 4; $i++) 
            {
              $item = new BudgetCalendar();

              $item->year = $year;
              $item->quarter = $i;
              $item->day = 5;

              $item->save();
            }
        }

        return self::getInstance()->createQuery()->select('*')->where('year = ?', $year)->orderBy('quarter')->execute();
    }

    public static function getYearQuartersAndDays($year) {
        if (self::$_year != $year) {
            self::$_year = $year;
            self::$_days = array();

            $qs = self::getInstance()->createQuery()->select('*')->where('year = ?', $year)->orderBy('quarter')->execute();
            foreach ($qs as $item) {
                self::$_days[$item->getQuarter()] = $item->getDay();
            }
        }

        return self::$_days;
    }

    public static function getYearsList() {
        $firstYear = self::getInstance()->createQuery()->select('*')->orderBy('year ASC')->fetchOne();

        for($year = ($firstYear->getYear() + 1); $year <= ( $firstYear->getYear() + self::MAX_YEARS ) ; $year++ ) {
            $item = self::getInstance()->createQuery()->select('*')->where('year = ?', $year)->execute()->getFirst();

            if(!$item)
            {
                for($q = 1; $q <= 4; $q++ ) 
                {
                    $item = new BudgetCalendar();

                    $item->year = $year;
                    $item->quarter = $q;
                    $item->day = 5;

                    $item->save();
                }
            }
        }

        return self::getInstance()
                    ->createQuery()
                    ->select()
                    ->groupBy('year')
                    ->orderBy('year ASC')
                        ->execute();
    }   
}