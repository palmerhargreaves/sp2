<?php

/**
 * DealerDiscussionTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class DealerDiscussionTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return DealerDiscussionTable
     */
    static function getInstance()
    {
        return Doctrine_Core::getTable('DealerDiscussion');
    }

    /**
     * Returns a discussion related with a delaer.
     * Creates new one if not exists.
     *
     * @param Dealer $dealer
     * @return Discussion
     */
    function findDiscussion(Dealer $dealer)
    {

        $dealer_discussion = null;

        $id = $dealer->getId();
        if (!empty($id))
            $dealer_discussion = $this->findOneByDealerId($dealer->getId());

        if (!$dealer_discussion) {
            $dealer_discussion = new DealerDiscussion();
            $dealer_discussion->setDealer($dealer);
            $discussion = new Discussion();
            $discussion->save();
            $dealer_discussion->setDiscussionId($discussion->getId());
            $dealer_discussion->save();
        }

        return DiscussionTable::getInstance()->find($dealer_discussion->getDiscussionId());
    }

    function countUnread(User $user)
    {
        if ($user->isManager())
            return $this->countUnreadForManager($user);

        if ($user->isDealerUser())
            return $this->countUnreadForDealer($user);

        return 0;
    }

    protected function countUnreadForDealer(User $user)
    {
        $discussion = $this->findDiscussion($user->getDealer());
        return $discussion->countUnreadMessages($user);
    }

    protected function countUnreadForManager(User $user)
    {
        return MessageTable::getInstance()
            ->createQuery('m')
            ->innerJoin('m.Discussion d')
            ->innerJoin('d.DealerDiscussions dd')
            ->where('m.id>?', $this->getMinUnread($user))
            ->count();
    }

    private function getMinUnread(User $user)
    {
        $last_read = DiscussionLastReadTable::getInstance()
            ->createQuery('lr')
            ->select('lr.message_id')
            ->innerJoin('lr.Message m')
            ->innerJoin('m.Discussion d')
            ->innerJoin('d.DealerDiscussions dd')
            ->where('lr.user_id=?', $user->getId())
            ->orderBy('lr.id')
            ->limit(1)
            ->fetchOne();

        if ($last_read)
            return $last_read->getMessageId();

        $last = $this->getLastMessage();
        if (!$last)
            return 0;

        $last_read = new DiscussionLastRead();
        $last_read->setUserId($user->getId());
        $last_read->setMessageId($last->getId());
        $last_read->save();

        return $last_read->getMessageId();
    }

    private function getLastMessage()
    {
        return MessageTable::getInstance()
            ->createQuery('m')
            ->select('m.id')
            ->innerJoin('m.Discussion d')
            ->innerJoin('d.DealerDiscussions dd')
            ->orderBy('m.id desc')
            ->limit(1)
            ->fetchOne();
    }
}
