<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AgreementModelReport', 'doctrine');

/**
 * BaseAgreementModelReport
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $model_id
 * @property string $financial_docs_file
 * @property string $additional_file
 * @property clob $agreement_comments
 * @property string $agreement_comments_file
 * @property integer $decline_reason_id
 * @property timestamp $accept_date
 * @property boolean $accept_processed
 * @property enum $status
 * @property AgreementModel $Model
 * @property AgreementDeclineReportReason $DeclineReason
 * @property Doctrine_Collection $Comments
 * @property AgreementModel $AgreementModel
 * 
 * @method integer                      getId()                      Returns the current record's "id" value
 * @method integer                      getModelId()                 Returns the current record's "model_id" value
 * @method string                       getFinancialDocsFile()       Returns the current record's "financial_docs_file" value
 * @method string                       getAdditionalFile()          Returns the current record's "additional_file" value
 * @method clob                         getAgreementComments()       Returns the current record's "agreement_comments" value
 * @method string                       getAgreementCommentsFile()   Returns the current record's "agreement_comments_file" value
 * @method integer                      getDeclineReasonId()         Returns the current record's "decline_reason_id" value
 * @method timestamp                    getAcceptDate()              Returns the current record's "accept_date" value
 * @method boolean                      getAcceptProcessed()         Returns the current record's "accept_processed" value
 * @method enum                         getStatus()                  Returns the current record's "status" value
 * @method AgreementModel               getModel()                   Returns the current record's "Model" value
 * @method AgreementDeclineReportReason getDeclineReason()           Returns the current record's "DeclineReason" value
 * @method Doctrine_Collection          getComments()                Returns the current record's "Comments" collection
 * @method AgreementModel               getAgreementModel()          Returns the current record's "AgreementModel" value
 * @method AgreementModelReport         setId()                      Sets the current record's "id" value
 * @method AgreementModelReport         setModelId()                 Sets the current record's "model_id" value
 * @method AgreementModelReport         setFinancialDocsFile()       Sets the current record's "financial_docs_file" value
 * @method AgreementModelReport         setAdditionalFile()          Sets the current record's "additional_file" value
 * @method AgreementModelReport         setAgreementComments()       Sets the current record's "agreement_comments" value
 * @method AgreementModelReport         setAgreementCommentsFile()   Sets the current record's "agreement_comments_file" value
 * @method AgreementModelReport         setDeclineReasonId()         Sets the current record's "decline_reason_id" value
 * @method AgreementModelReport         setAcceptDate()              Sets the current record's "accept_date" value
 * @method AgreementModelReport         setAcceptProcessed()         Sets the current record's "accept_processed" value
 * @method AgreementModelReport         setStatus()                  Sets the current record's "status" value
 * @method AgreementModelReport         setModel()                   Sets the current record's "Model" value
 * @method AgreementModelReport         setDeclineReason()           Sets the current record's "DeclineReason" value
 * @method AgreementModelReport         setComments()                Sets the current record's "Comments" collection
 * @method AgreementModelReport         setAgreementModel()          Sets the current record's "AgreementModel" value
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAgreementModelReport extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('agreement_model_report');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('model_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unique' => true,
             ));
        $this->hasColumn('financial_docs_file', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('financial_docs_file1', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('financial_docs_file2', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('financial_docs_file3', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('financial_docs_file4', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('financial_docs_file5', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('financial_docs_file6', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('financial_docs_file7', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('financial_docs_file8', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('financial_docs_file9', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('financial_docs_file10', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('additional_file', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('additional_file2', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('additional_file3', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('additional_file4', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('additional_file5', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('additional_file6', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('additional_file7', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('additional_file_ext1', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('additional_file_ext2', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('additional_file_ext3', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('additional_file_ext4', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('additional_file_ext5', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('additional_file_ext6', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('additional_file_ext7', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('additional_file_ext8', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('additional_file_ext9', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('additional_file_ext10', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->hasColumn('agreement_comments', 'clob', null, array(
             'type' => 'clob',
             'notnull' => false,
             ));
        $this->hasColumn('agreement_comments_file', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('decline_reason_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('accept_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('accept_processed', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'wait',
              1 => 'wait_specialist',
              2 => 'accepted',
              3 => 'declined',
              4 => 'not_sent',
             ),
             'notnull' => true,
             ));

        $this->hasColumn('manager_status', 'enum', null, array(
            'type' => 'enum',
            'values' =>
                array(
                    0 => 'wait',
                    1 => 'accepted',
                    2 => 'declined',
                    3 => 'not_sent',
                ),
            'notnull' => true,
        ));
        $this->hasColumn('designer_status', 'enum', null, array(
            'type' => 'enum',
            'values' =>
                array(
                    0 => 'wait',
                    1 => 'accepted',
                    2 => 'declined',
                    3 => 'not_sent',
                ),
            'notnull' => true,
        ));


        $this->index('status', array(
             'fields' => 
             array(
              0 => 'status',
             ),
             ));
        $this->index('accept_date', array(
             'fields' => 
             array(
              0 => 'accept_date',
             ),
             ));
        $this->index('accept_processed', array(
             'fields' => 
             array(
              0 => 'accept_processed',
             ),
             ));
        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('AgreementModel as Model', array(
             'local' => 'model_id',
             'foreign' => 'id'));

        $this->hasOne('AgreementDeclineReportReason as DeclineReason', array(
             'local' => 'decline_reason_id',
             'foreign' => 'id'));

        $this->hasMany('AgreementModelReportComment as Comments', array(
             'local' => 'id',
             'foreign' => 'report_id',
             'cascade' => array(
             0 => 'delete',
             )));

        $this->hasOne('AgreementModel', array(
             'local' => 'id',
             'foreign' => 'report_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}
