<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ActivityExtendedStatisticStepEmails', 'doctrine');

/**
 * BaseActivityExtendedStatisticStepEmails
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $step_id
 * @property integer $user_id
 * 
 * @method integer                             getId()        Returns the current record's "id" value
 * @method integer                             getStepId()        Returns the current record's "step_id" value
 * @method integer                             getUserId()        Returns the current record's "user_id" value
 * @method ActivityExtendedStatisticStepEmails setId()        Sets the current record's "id" value
 * @method ActivityExtendedStatisticStepEmails setStepId()        Sets the current record's "step_id" value
 * @method ActivityExtendedStatisticStepEmails setUserId()        Sets the current record's "user_id" value
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseActivityExtendedStatisticStepEmails extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('activity_extended_statistic_step_emails');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('step_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             'notnull' => true,
             ));
        $this->hasColumn('user_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             'notnull' => true,
             ));


        $this->index('step_id', array(
             'fields' => 
             array(
              0 => 'step_id',
             ),
             ));
        $this->index('user_id', array(
             'fields' => 
             array(
              0 => 'user_id',
             ),
             ));
        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}