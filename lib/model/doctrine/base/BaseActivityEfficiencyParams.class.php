<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ActivityEfficiencyParams', 'doctrine');

/**
 * BaseActivityEfficiencyParams
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $activity_id
 * @property string $param_name
 * @property string $description
 * 
 * @method integer                  getId()          Returns the current record's "id" value
 * @method integer                  getActivityId()  Returns the current record's "activity_id" value
 * @method string                   getParamName()   Returns the current record's "param_name" value
 * @method string                   getDescription() Returns the current record's "description" value
 * @method ActivityEfficiencyParams setId()          Sets the current record's "id" value
 * @method ActivityEfficiencyParams setActivityId()  Sets the current record's "activity_id" value
 * @method ActivityEfficiencyParams setParamName()   Sets the current record's "param_name" value
 * @method ActivityEfficiencyParams setDescription() Sets the current record's "description" value
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseActivityEfficiencyParams extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('activity_efficiency_params');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('activity_id', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             'notnull' => false,
             ));
        $this->hasColumn('param_name', 'string', 150, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 150,
             ));
        $this->hasColumn('param_description', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));


        $this->index('main', array(
             'fields' => 
             array(
              0 => 'activity_id',
             ),
             ));
        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();

        $this->hasOne('Activity', array(
            'local' => 'activity_id',
            'foreign' => 'id'));
    }
}