<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ActivityExtendedStatisticFieldsData', 'doctrine');

/**
 * BaseActivityExtendedStatisticFieldsData
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $field_id
 * @property integer $activity_id
 * @property integer $user_id
 * @property integer $dealer_id
 * @property integer $value
 * 
 * @method integer                             getId()          Returns the current record's "id" value
 * @method integer                             getFieldId()     Returns the current record's "field_id" value
 * @method integer                             getActivityId()  Returns the current record's "activity_id" value
 * @method integer                             getUserId()      Returns the current record's "user_id" value
 * @method integer                             getDealerId()    Returns the current record's "dealer_id" value
 * @method integer                             getValue()       Returns the current record's "value" value
 * @method ActivityExtendedStatisticFieldsData setId()          Sets the current record's "id" value
 * @method ActivityExtendedStatisticFieldsData setFieldId()     Sets the current record's "field_id" value
 * @method ActivityExtendedStatisticFieldsData setActivityId()  Sets the current record's "activity_id" value
 * @method ActivityExtendedStatisticFieldsData setUserId()      Sets the current record's "user_id" value
 * @method ActivityExtendedStatisticFieldsData setDealerId()    Sets the current record's "dealer_id" value
 * @method ActivityExtendedStatisticFieldsData setValue()       Sets the current record's "value" value
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseActivityExtendedStatisticFieldsData extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('activity_extended_statistic_fields_data');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('field_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('activity_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('dealer_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('step_id', 'integer', null, array(
            'type' => 'integer',
            'notnull' => false,
        ));
        $this->hasColumn('year', 'integer', null, array(
            'type' => 'integer',
            'notnull' => false,
        ));
        $this->hasColumn('quarter', 'integer', null, array(
            'type' => 'integer',
            'notnull' => false,
        ));
        $this->hasColumn('value', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('concept_id', 'integer', null, array(
            'type' => 'integer',
            'notnull' => false,
        ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();

        $this->hasOne('ActivityExtendedStatisticFields as Field', array(
             'local' => 'field_id',
             'foreign' => 'id'));        

        $this->hasOne('Dealer', array(
             'local' => 'dealer_id',
             'foreign' => 'id'));

        $this->hasOne('AgreementModel as Concept', array(
            'local' => 'concept_id',
            'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}