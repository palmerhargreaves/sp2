<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ActivityDealerStaticticStatus', 'doctrine');

/**
 * BaseActivityDealerStaticticStatus
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $dealer_id
 * @property integer $activity_id
 * @property enum $stat_type
 * @property boolean $complete
 * 
 * @method integer                       getId()          Returns the current record's "id" value
 * @method integer                       getDealerId()    Returns the current record's "dealer_id" value
 * @method integer                       getActivityId()  Returns the current record's "activity_id" value
 * @method enum                          getStatType()    Returns the current record's "stat_type" value
 * @method boolean                       getComplete()    Returns the current record's "complete" value
 * @method ActivityDealerStaticticStatus setId()          Sets the current record's "id" value
 * @method ActivityDealerStaticticStatus setDealerId()    Sets the current record's "dealer_id" value
 * @method ActivityDealerStaticticStatus setActivityId()  Sets the current record's "activity_id" value
 * @method ActivityDealerStaticticStatus setStatType()    Sets the current record's "stat_type" value
 * @method ActivityDealerStaticticStatus setComplete()    Sets the current record's "complete" value
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseActivityDealerStaticticStatus extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('activity_dealer_statistic_status');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('dealer_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('activity_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('stat_type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'simple',
              1 => 'extended',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('q1', 'integer', null, array(
            'type' => 'integer',
            'notnull' => false,
        ));
        $this->hasColumn('q2', 'integer', null, array(
            'type' => 'integer',
            'notnull' => false,
        ));
        $this->hasColumn('q3', 'integer', null, array(
            'type' => 'integer',
            'notnull' => false,
        ));
        $this->hasColumn('q4', 'integer', null, array(
            'type' => 'integer',
            'notnull' => false,
        ));
        $this->hasColumn('concept_id', 'integer', null, array(
            'type' => 'integer',
            'notnull' => false,
        ));
        $this->hasColumn('year', 'integer', null, array(
            'type' => 'integer',
            'notnull' => false,
        ));
        $this->hasColumn('complete', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('always_open', 'boolean', null, array(
            'type' => 'boolean',
            'notnull' => true,
            'default' => false,
        ));
        $this->hasColumn('ignore_statistic', 'boolean', null, array(
            'type' => 'boolean',
            'notnull' => true,
            'default' => false,
        ));

        $this->hasColumn('ignore_q1_statistic', 'boolean', null, array(
            'type' => 'boolean',
            'notnull' => true,
            'default' => false,
        ));

        $this->hasColumn('ignore_q2_statistic', 'boolean', null, array(
            'type' => 'boolean',
            'notnull' => true,
            'default' => false,
        ));

        $this->hasColumn('ignore_q3_statistic', 'boolean', null, array(
            'type' => 'boolean',
            'notnull' => true,
            'default' => false,
        ));

        $this->hasColumn('ignore_q4_statistic', 'boolean', null, array(
            'type' => 'boolean',
            'notnull' => true,
            'default' => false,
        ));

        $this->hasColumn('using_steps', 'boolean', null, array(
            'type' => 'boolean',
            'notnull' => true,
            'default' => false,
        ));

        $this->index('dealer_id', array(
             'fields' => 
             array(
              0 => 'dealer_id',
             ),
             ));

        $this->index('activity_id', array(
             'fields' => 
             array(
              0 => 'activity_id',
             ),
             ));        

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();

        $this->hasOne('Activity', array(
            'local' => 'activity_id',
            'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}
