<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MailMessage', 'doctrine');

/**
 * BaseMailMessage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $email
 * @property blob $message
 * @property integer $priority
 * 
 * @method string      getEmail()    Returns the current record's "email" value
 * @method blob        getMessage()  Returns the current record's "message" value
 * @method integer     getPriority() Returns the current record's "priority" value
 * @method MailMessage setEmail()    Sets the current record's "email" value
 * @method MailMessage setMessage()  Sets the current record's "message" value
 * @method MailMessage setPriority() Sets the current record's "priority" value
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMailMessage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('mail_message');
        $this->hasColumn('email', 'string', 254, array(
             'type' => 'string',
             'length' => 254,
             ));
        $this->hasColumn('message', 'blob', null, array(
             'type' => 'blob',
             'notnull' => true,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->hasColumn('can_send', 'boolean', null, array(
            'type' => 'boolean',
            'notnull' => true,
            'default' => true,
        ));
        $this->hasColumn('model_id', 'integer', null, array(
            'type' => 'integer',
        ));
        $this->hasColumn('must_delete', 'boolean', null, array(
            'type' => 'boolean',
            'notnull' => true,
            'default' => false,
        ));

        $this->hasColumn('msg_type', 'enum', null, array(
            'type' => 'enum',
            'values' =>
                array(
                    0 => 'none',
                    1 => 'manager',
                    2 => 'specialist',
                ),
            'notnull' => true,
        ));

        $this->index('priority', array(
             'fields' => 
             array(
              0 => 'priority',
             ),
             ));
        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}
