<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ActivityExamplesMaterials', 'doctrine');

/**
 * BaseActivityExamplesMaterials
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property integer $id
 * @property string $name
 * @property integer $activity_id
 * @property integer $dealer_id
 * @property string $material_file
 * @property string $description
 * @property integer $category_id
 *
 * @method integer                   getId()            Returns the current record's "id" value
 * @method string                    getName()          Returns the current record's "name" value
 * @method integer                   getActivityId()    Returns the current record's "activity_id" value
 * @method integer                   getDealerId()      Returns the current record's "dealer_id" value
 * @method string                    getMaterialFile()  Returns the current record's "material_file" value
 * @method string                    getDescription()   Returns the current record's "description" value
 * @method integer                   getCategoryId()    Returns the current record's "category_id" value
 * @method ActivityExamplesMaterials setId()            Sets the current record's "id" value
 * @method ActivityExamplesMaterials setName()          Sets the current record's "name" value
 * @method ActivityExamplesMaterials setActivityId()    Sets the current record's "activity_id" value
 * @method ActivityExamplesMaterials setDealerId()      Sets the current record's "dealer_id" value
 * @method ActivityExamplesMaterials setMaterialFile()  Sets the current record's "material_file" value
 * @method ActivityExamplesMaterials setDescription()   Sets the current record's "description" value
 * @method ActivityExamplesMaterials setCategoryId()    Sets the current record's "category_id" value
 * @property  $
 * @property  $
 * @property  $
 *
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseActivityExamplesMaterials extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('activity_examples_materials');
        $this->hasColumn('id', 'integer', null, array(
            'type' => 'integer',
            'primary' => true,
            'autoincrement' => true,
        ));
        $this->hasColumn('name', 'string', 255, array(
            'type' => 'string',
            'length' => 255,
            'notnull' => false,
        ));
        $this->hasColumn('activity_id', 'integer', null, array(
            'type' => 'integer',
            'default' => 0,
            'notnull' => false,
        ));
        $this->hasColumn('dealer_id', 'integer', null, array(
            'type' => 'integer',
            'default' => 0,
            'notnull' => false,
        ));
        $this->hasColumn('preview_file', 'string', 255, array(
            'type' => 'string',
            'length' => 255,
            'notnull' => false,
        ));
        $this->hasColumn('preview_file_thumbnail', 'string', 255, array(
            'type' => 'string',
            'length' => 255,
            'notnull' => false,
        ));
        $this->hasColumn('material_file', 'string', 255, array(
            'type' => 'string',
            'length' => 255,
            'notnull' => false,
        ));
        $this->hasColumn('description', 'string', 255, array(
            'type' => 'string',
            'length' => 255,
            'notnull' => false,
        ));
        $this->hasColumn('category_id', 'integer', 11, array(
            'type' => 'integer',
            'default' => 0,
            'length' => 11,
        ));
        $this->hasColumn('year', 'integer', 11, array(
            'type' => 'integer',
            'default' => 0,
            'length' => 11,
        ));

        $this->index('main', array(
            'fields' =>
                array(
                    0 => 'activity_id',
                    1 => 'dealer_id',
                    2 => 'category_id',
                    3 => 'year'
                ),
        ));
        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Activity', array(
            'local' => 'activity_id',
            'foreign' => 'id'));

        $this->hasOne('Dealer', array(
            'local' => 'dealer_id',
            'foreign' => 'id'));

        $this->hasOne('ActivityExamplesMaterialsCategories', array(
            'local' => 'category_id',
            'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
            'updated' =>
                array(
                    'disabled' => true,
                ),
        ));
        $this->actAs($timestampable0);
    }
}