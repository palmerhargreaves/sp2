<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AgreementModelReportFiles', 'doctrine');

/**
 * BaseAgreementModelReportFiles
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property integer $id
 * @property integer $object_id
 * @property enum $object_type
 * @property enum $file_type
 * @property string $file
 * @property string $file_size
 * @property integer $user_id
 * @property string $file_mime_tupe
 * @property integer $download_count
 *
 * @method integer                   getId()             Returns the current record's "id" value
 * @method integer                   getObjectId()       Returns the current record's "object_id" value
 * @method enum                      getObjectType()     Returns the current record's "object_type" value
 * @method enum                      getFileType()       Returns the current record's "file_type" value
 * @method string                    getFile()           Returns the current record's "file" value
 * @method string                    getFileSize()       Returns the current record's "file_size" value
 * @method integer                   getUserId()         Returns the current record's "user_id" value
 * @method string                    getFileMimeTupe()   Returns the current record's "file_mime_tupe" value
 * @method integer                   getDownloadCount()  Returns the current record's "download_count" value
 * @method AgreementModelReportFiles setId()             Sets the current record's "id" value
 * @method AgreementModelReportFiles setObjectId()       Sets the current record's "object_id" value
 * @method AgreementModelReportFiles setObjectType()     Sets the current record's "object_type" value
 * @method AgreementModelReportFiles setFileType()       Sets the current record's "file_type" value
 * @method AgreementModelReportFiles setFile()           Sets the current record's "file" value
 * @method AgreementModelReportFiles setFileSize()       Sets the current record's "file_size" value
 * @method AgreementModelReportFiles setUserId()         Sets the current record's "user_id" value
 * @method AgreementModelReportFiles setFileMimeTupe()   Sets the current record's "file_mime_tupe" value
 * @method AgreementModelReportFiles setDownloadCount()  Sets the current record's "download_count" value
 *
 * @package    Marketing Aftersales NFZ
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAgreementModelReportFiles extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('agreement_model_report_files');
        $this->hasColumn('id', 'integer', null, array(
            'type' => 'integer',
            'primary' => true,
            'autoincrement' => true,
        ));
        $this->hasColumn('object_id', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('activity_id', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('object_type', 'enum', null, array(
            'type' => 'enum',
            'values' =>
                array(
                    0 => 'model',
                    1 => 'report',
                ),
            'notnull' => true,
        ));
        $this->hasColumn('file_type', 'enum', null, array(
            'type' => 'enum',
            'values' =>
                array(
                    0 => 'model',
                    1 => 'model_record',
                    2 => 'model_scenario',
                    3 => 'report',
                    4 => 'report_additional',
                    5 => 'report_financial',
                    6 => 'report_additional_ext'
                ),
            'notnull' => true,
        ));
        $this->hasColumn('file', 'string', 255, array(
            'type' => 'string',
            'notnull' => true,
            'length' => 255,
        ));
        $this->hasColumn('file_size', 'string', 80, array(
            'type' => 'string',
            'notnull' => true,
            'length' => 80,
        ));
        $this->hasColumn('user_id', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('file_mime_type', 'string', 160, array(
            'type' => 'string',
            'notnull' => false,
            'length' => 160,
        ));
        $this->hasColumn('download_count', 'integer', null, array(
            'type' => 'integer',
            'notnull' => false,
            'default' => 0,
        ));
        $this->hasColumn('field', 'string', null, array(
            'type' => 'string',
            'notnull' => false,
            'default' => 80,
        ));
        $this->hasColumn('field_name', 'string', null, array(
            'type' => 'string',
            'notnull' => false,
            'default' => 80,
        ));
        $this->hasColumn('is_external_file', 'boolean', null, array(
            'type' => 'boolean',
            'notnull' => true,
        ));
        $this->hasColumn('user_agent', 'string', 255, array(
            'type' => 'string',
            'notnull' => false,
            'length' => 255,
        ));
        $this->hasColumn('path', 'string', 255, array(
            'type' => 'string',
            'notnull' => false,
            'length' => 255,
        ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}
