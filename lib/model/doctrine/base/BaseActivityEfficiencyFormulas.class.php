<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ActivityEfficiencyFormulas', 'doctrine');

/**
 * BaseActivityEfficiencyFormulas
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property integer $id
 * @property string $name
 * @property integer $efficiency_param_id
 * @property boolean $status
 *
 * @method integer                    getId()                  Returns the current record's "id" value
 * @method string                     getName()                Returns the current record's "name" value
 * @method integer                    getEfficiencyParamId()   Returns the current record's "efficiency_param_id" value
 * @method boolean                    getStatus()              Returns the current record's "status" value
 * @method ActivityEfficiencyFormulas setId()                  Sets the current record's "id" value
 * @method ActivityEfficiencyFormulas setName()                Sets the current record's "name" value
 * @method ActivityEfficiencyFormulas setEfficiencyParamId()   Sets the current record's "efficiency_param_id" value
 * @method ActivityEfficiencyFormulas setStatus()              Sets the current record's "status" value
 *
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseActivityEfficiencyFormulas extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('activity_efficiency_formulas');
        $this->hasColumn('id', 'integer', null, array(
            'type' => 'integer',
            'primary' => true,
            'autoincrement' => true,
        ));
        $this->hasColumn('name', 'string', 255, array(
            'type' => 'string',
            'notnull' => false,
            'length' => 255,
        ));
        $this->hasColumn('description', 'string', 255, array(
            'type' => 'string',
            'notnull' => false,
            'length' => 255,
        ));
        $this->hasColumn('activity_id', 'integer', null, array(
            'type' => 'integer',
            'default' => 0,
            'notnull' => false,
        ));
        $this->hasColumn('main_formula', 'boolean', null, array(
            'type' => 'boolean',
            'default' => false,
        ));
        $this->hasColumn('work_formula_id', 'integer', null, array(
            'type' => 'integer',
            'default' => 0,
            'notnull' => false,
        ));
        $this->hasColumn('status', 'boolean', null, array(
            'type' => 'boolean',
            'default' => true,
        ));

        $this->index('main', array(
            'fields' =>
                array(
                    0 => 'efficiency_param_id',
                    1 => 'activity_id',
                    2 => 'work_formula_id'
                ),
        ));
        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();

        $this->hasOne('ActivityEfficiencyParams', array(
            'local' => 'efficiency_param_id',
            'foreign' => 'id'));

        $this->hasOne('ActivityEfficiencyWorkFormulas', array(
            'local' => 'work_formula_id',
            'foreign' => 'id'));

        $this->hasMany('ActivityEfficiencyFormulaParams', array(
            'local' => 'id',
            'foreign' => 'formula_id',
            'cascade' => array(
                0 => 'delete',
            )));

        $this->hasOne('Activity', array(
            'local' => 'activity_id',
            'foreign' => 'id'));
    }
}