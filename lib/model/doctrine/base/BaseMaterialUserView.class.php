<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MaterialUserView', 'doctrine');

/**
 * BaseMaterialUserView
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property integer $material_id
 * @property User $User
 * @property Material $Material
 * 
 * @method integer          getId()          Returns the current record's "id" value
 * @method integer          getUserId()      Returns the current record's "user_id" value
 * @method integer          getMaterialId()  Returns the current record's "material_id" value
 * @method User             getUser()        Returns the current record's "User" value
 * @method Material         getMaterial()    Returns the current record's "Material" value
 * @method MaterialUserView setId()          Sets the current record's "id" value
 * @method MaterialUserView setUserId()      Sets the current record's "user_id" value
 * @method MaterialUserView setMaterialId()  Sets the current record's "material_id" value
 * @method MaterialUserView setUser()        Sets the current record's "User" value
 * @method MaterialUserView setMaterial()    Sets the current record's "Material" value
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMaterialUserView extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('material_user_view');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('material_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->index('view', array(
             'fields' => 
             array(
              0 => 'user_id',
              1 => 'material_id',
             ),
             'type' => 'unique',
             ));
        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('Material', array(
             'local' => 'material_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}