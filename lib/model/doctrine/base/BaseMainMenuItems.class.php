<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MainMenuItems', 'doctrine');

/**
 * BaseMainMenuItems
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $url
 * @property string $image
 * @property boolean $status
 * 
 * @method integer       getId()     Returns the current record's "id" value
 * @method string        getName()   Returns the current record's "name" value
 * @method string        getUrl()    Returns the current record's "url" value
 * @method string        getImage()  Returns the current record's "image" value
 * @method boolean       getStatus() Returns the current record's "status" value
 * @method MainMenuItems setId()     Sets the current record's "id" value
 * @method MainMenuItems setName()   Sets the current record's "name" value
 * @method MainMenuItems setUrl()    Sets the current record's "url" value
 * @method MainMenuItems setImage()  Sets the current record's "image" value
 * @method MainMenuItems setStatus() Sets the current record's "status" value
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMainMenuItems extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('main_menu_items');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'notnull' => true,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'notnull' => true,
             ));
        $this->hasColumn('url_name', 'string', 255, array(
            'type' => 'string',
            'length' => 255,
            'notnull' => true,
        ));
        $this->hasColumn('custom_code_access', 'clob', null, array(
            'type' => 'clob',
            'notnull' => true,
        ));
        $this->hasColumn('custom_code_url', 'clob', null, array(
            'type' => 'clob',
            'notnull' => true,
        ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'notnull' => true,
             ));
        $this->hasColumn('position', 'integer', 11, array(
            'type' => 'integer',
            'length' => 11,
            'notnull' => true,
        ));
        $this->hasColumn('status', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}
