<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ActivityExtendedStatisticStepStatus', 'doctrine');

/**
 * BaseActivityExtendedStatisticStepStatus
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $step_id
 * @property integer $user_id
 * @property integer $activity_id
 * @property integer $dealer_id
 * @property integer $year
 * @property integer $quarter
 * @property boolean $status
 * 
 * @method integer                             getId()            Returns the current record's "id" value
 * @method integer                             getStepId()            Returns the current record's "step_id" value
 * @method integer                             getUserId()            Returns the current record's "user_id" value
 * @method integer                             getActivityId()            Returns the current record's "activity_id" value
 * @method integer                             getDealerId()            Returns the current record's "dealer_id" value
 * @method integer                             getYear()            Returns the current record's "year" value
 * @method integer                             getQuarter()            Returns the current record's "quarter" value
 * @method boolean                             getStatus()            Returns the current record's "status" value
 * @method ActivityExtendedStatisticStepStatus setId()            Sets the current record's "id" value
 * @method ActivityExtendedStatisticStepStatus setStepId()            Sets the current record's "step_id" value
 * @method ActivityExtendedStatisticStepStatus setUserId()            Sets the current record's "user_id" value
 * @method ActivityExtendedStatisticStepStatus setActivityId()            Sets the current record's "activity_id" value
 * @method ActivityExtendedStatisticStepStatus setDealerId()            Sets the current record's "dealer_id" value
 * @method ActivityExtendedStatisticStepStatus setYear()            Sets the current record's "year" value
 * @method ActivityExtendedStatisticStepStatus setQuarter()            Sets the current record's "quarter" value
 * @method ActivityExtendedStatisticStepStatus setStatus()            Sets the current record's "status" value
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseActivityExtendedStatisticStepStatus extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('activity_extended_statistic_step_status');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('step_id', 'integer', 11, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 11,
             ));
        $this->hasColumn('activity_id', 'integer', 11, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 11,
             ));
        $this->hasColumn('dealer_id', 'integer', 11, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 11,
             ));
        $this->hasColumn('concept_id', 'integer', 11, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'primary' => false,
            'notnull' => true,
            'length' => 11,
        ));
        $this->hasColumn('year', 'integer', 11, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 11,
             ));
        $this->hasColumn('quarter', 'integer', 11, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 11,
             ));
        $this->hasColumn('status', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             ));


        $this->index('dealer_id', array(
             'fields' => 
             array(
              0 => 'dealer_id',
             ),
             ));
        $this->index('activity_id', array(
             'fields' => 
             array(
              0 => 'activity_id',
             ),
             ));
        $this->index('user_id', array(
             'fields' => 
             array(
              0 => 'user_id',
             ),
             ));
        $this->index('step_id', array(
             'fields' => 
             array(
              0 => 'step_id',
             ),
             ));
        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}