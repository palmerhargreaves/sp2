<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UsersDepartments', 'doctrine');

/**
 * BaseUsersDepartments
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * 
 * @method integer          getId()   Returns the current record's "id" value
 * @method string           getName() Returns the current record's "name" value
 * @method UsersDepartments setId()   Sets the current record's "id" value
 * @method UsersDepartments setName() Sets the current record's "name" value
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsersDepartments extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('users_departments');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'notnull' => true,
             ));
        $this->hasColumn('parent_id', 'integer', 11, array(
            'type' => 'integer',
            'length' => 11,
            'notnull' => true,
        ));
        $this->hasColumn('allow_emails', 'boolean', null, array(
            'type' => 'boolean',
            'default' => true
        ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();

        $this->hasMany('User', array(
            'local' => 'id',
            'foreign' => 'company_department'
        ));

        $this->hasOne('UsersDepartments as UserDepartment', array(
            'local' => 'parent_id',
            'foreign' => 'id'
        ));

        $this->hasMany('UsersDepartments as Childs', array(
            'local' => 'id',
            'foreign' => 'parent_id'
        ));
    }
}
