<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ActivityFieldsValues', 'doctrine');

/**
 * BaseActivityFieldsValues
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $field_id
 * @property integer $dealer_id
 * @property string $val
 * @property ActivityFields $ActivityFields
 * @property Dealer $Dealer
 * 
 * @method integer              getId()             Returns the current record's "id" value
 * @method integer              getFieldId()        Returns the current record's "field_id" value
 * @method integer              getDealerId()       Returns the current record's "dealer_id" value
 * @method string               getVal()            Returns the current record's "val" value
 * @method ActivityFields       getActivityFields() Returns the current record's "ActivityFields" value
 * @method Dealer               getDealer()         Returns the current record's "Dealer" value
 * @method ActivityFieldsValues setId()             Sets the current record's "id" value
 * @method ActivityFieldsValues setFieldId()        Sets the current record's "field_id" value
 * @method ActivityFieldsValues setDealerId()       Sets the current record's "dealer_id" value
 * @method ActivityFieldsValues setVal()            Sets the current record's "val" value
 * @method ActivityFieldsValues setActivityFields() Sets the current record's "ActivityFields" value
 * @method ActivityFieldsValues setDealer()         Sets the current record's "Dealer" value
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseActivityFieldsValues extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('activity_fields_values');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('field_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('dealer_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('val', 'string', 80, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 80,
             ));
        $this->hasColumn('q', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('year', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));

        $this->hasColumn('created_at', 'date', null, array(
            'type' => 'date',
            'notnull' => true,
        ));

        $this->hasColumn('updated_at', 'string', 30, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 30,
             ));

        $this->index('field_id', array(
             'fields' => 
             array(
              0 => 'field_id',
             ),
             ));

        $this->index('dealer_id', array(
             'fields' => 
             array(
              0 => 'dealer_id',
             ),
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ActivityFields', array(
             'local' => 'field_id',
             'foreign' => 'id'));

        $this->hasOne('Dealer', array(
             'local' => 'dealer_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}