<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ActivityVideoRecordsStatisticsHeadersFields', 'doctrine');

/**
 * BaseActivityVideoRecordsStatisticsHeadersFields
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $parent_header_id
 * @property string $header
 * @property enum $field_type
 * @property boolean $status
 * @property ActivityVideoRecordsStatisticsHeaders $ActivityVideoRecordsStatisticsHeaders
 * @property Doctrine_Collection $ActivityVideoRecordsStatisticsHeadersFieldsData
 * @property Doctrine_Collection $ActivityVideoRecordsStatisticsHeadersGroupsFields
 * 
 * @method integer                                     getId()                                                Returns the current record's "id" value
 * @method integer                                     getParentHeaderId()                                    Returns the current record's "parent_header_id" value
 * @method string                                      getHeader()                                            Returns the current record's "header" value
 * @method enum                                        getFieldType()                                         Returns the current record's "field_type" value
 * @method boolean                                     getStatus()                                            Returns the current record's "status" value
 * @method ActivityVideoRecordsStatisticsHeaders       getActivityVideoRecordsStatisticsHeaders()             Returns the current record's "ActivityVideoRecordsStatisticsHeaders" value
 * @method Doctrine_Collection                         getActivityVideoRecordsStatisticsHeadersFieldsData()   Returns the current record's "ActivityVideoRecordsStatisticsHeadersFieldsData" collection
 * @method Doctrine_Collection                         getActivityVideoRecordsStatisticsHeadersGroupsFields() Returns the current record's "ActivityVideoRecordsStatisticsHeadersGroupsFields" collection
 * @method ActivityVideoRecordsStatisticsHeadersFields setId()                                                Sets the current record's "id" value
 * @method ActivityVideoRecordsStatisticsHeadersFields setParentHeaderId()                                    Sets the current record's "parent_header_id" value
 * @method ActivityVideoRecordsStatisticsHeadersFields setHeader()                                            Sets the current record's "header" value
 * @method ActivityVideoRecordsStatisticsHeadersFields setFieldType()                                         Sets the current record's "field_type" value
 * @method ActivityVideoRecordsStatisticsHeadersFields setStatus()                                            Sets the current record's "status" value
 * @method ActivityVideoRecordsStatisticsHeadersFields setActivityVideoRecordsStatisticsHeaders()             Sets the current record's "ActivityVideoRecordsStatisticsHeaders" value
 * @method ActivityVideoRecordsStatisticsHeadersFields setActivityVideoRecordsStatisticsHeadersFieldsData()   Sets the current record's "ActivityVideoRecordsStatisticsHeadersFieldsData" collection
 * @method ActivityVideoRecordsStatisticsHeadersFields setActivityVideoRecordsStatisticsHeadersGroupsFields() Sets the current record's "ActivityVideoRecordsStatisticsHeadersGroupsFields" collection
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseActivityVideoRecordsStatisticsHeadersFields extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('activity_video_records_statistics_headers_fields');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('parent_header_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('group_id', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('owner', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('header', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'notnull' => true,
             ));
        $this->hasColumn('description', 'clob', null, array(
            'type' => 'clob',
            'notnull' => false,
        ));
        $this->hasColumn('field_type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'text',
              1 => 'number',
              2 => 'date',
              3 => 'bool',
             ),
             ));
        $this->hasColumn('required', 'boolean', null, array(
            'type' => 'boolean',
            'notnull' => true,
            'default' => false,
        ));
        $this->hasColumn('status', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));


        $this->index('video_record_statistic', array(
             'fields' => 
             array(
              0 => 'parent_header_id',
             ),
             ));
        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ActivityVideoRecordsStatisticsHeaders', array(
             'local' => 'parent_header_id',
             'foreign' => 'id'));

        $this->hasOne('ActivityVideoRecordsStatisticsHeadersGroups', array(
            'local' => 'group_id',
            'foreign' => 'id'));

        $this->hasMany('ActivityVideoRecordsStatisticsHeadersFieldsData', array(
             'local' => 'id',
             'foreign' => 'field_id'));

        $this->hasMany('ActivityVideoRecordsStatisticsHeadersGroupsFields', array(
             'local' => 'id',
             'foreign' => 'group_id'));
    }
}