<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ActivityModelsTypesNecessarily', 'doctrine');

/**
 * BaseActivityModelsTypesNecessarily
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property integer $id
 * @property integer $activity_id
 * @property integer $model_type_id
 * @property integer $activity_task_id
 *
 * @method integer                        getId()               Returns the current record's "id" value
 * @method integer                        getActivityId()       Returns the current record's "activity_id" value
 * @method integer                        getModelTypeId()      Returns the current record's "model_type_id" value
 * @method integer                        getActivityTaskId()   Returns the current record's "activity_task_id" value
 * @method ActivityModelsTypesNecessarily setId()               Sets the current record's "id" value
 * @method ActivityModelsTypesNecessarily setActivityId()       Sets the current record's "activity_id" value
 * @method ActivityModelsTypesNecessarily setModelTypeId()      Sets the current record's "model_type_id" value
 * @method ActivityModelsTypesNecessarily setActivityTaskId()   Sets the current record's "activity_task_id" value
 *
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseActivityModelsTypesNecessarily extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('activity_models_types_necessarily');
        $this->hasColumn('id', 'integer', null, array(
            'type' => 'integer',
            'primary' => true,
            'autoincrement' => true,
        ));
        $this->hasColumn('activity_id', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('model_type_id', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('activity_task_id', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('is_used', 'boolean', null, array(
            'type' => 'boolean',
            'notnull' => true,
            'default' => false
        ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();

        $this->hasOne('Activity', array(
            'local' => 'activity_id',
            'foreign' => 'id'));

        $this->hasOne('AgreementModelType', array(
            'local' => 'model_type_id',
            'foreign' => 'id'));

        $this->hasOne('ActivityTask', array(
            'local' => 'activity_task_id',
            'foreign' => 'id'));
    }
}