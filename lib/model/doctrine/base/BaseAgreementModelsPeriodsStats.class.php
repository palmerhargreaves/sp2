<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AgreementModelsPeriodsStats', 'doctrine');

/**
 * BaseAgreementModelsPeriodsStats
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $model_id
 * @property integer $model_period_id
 * @property enum $model_status
 * 
 * @method integer                     getId()              Returns the current record's "id" value
 * @method integer                     getModelId()         Returns the current record's "model_id" value
 * @method integer                     getModelPeriodId()   Returns the current record's "model_period_id" value
 * @method enum                        getModelStatus()     Returns the current record's "model_status" value
 * @method AgreementModelsPeriodsStats setId()              Sets the current record's "id" value
 * @method AgreementModelsPeriodsStats setModelId()         Sets the current record's "model_id" value
 * @method AgreementModelsPeriodsStats setModelPeriodId()   Sets the current record's "model_period_id" value
 * @method AgreementModelsPeriodsStats setModelStatus()     Sets the current record's "model_status" value
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAgreementModelsPeriodsStats extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('agreement_models_periods_stats');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('model_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('model_period_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('model_status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'commented',
              1 => 'commented_by_specialist',
              2 => 'sended',
              3 => 'completed',
             ),
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}