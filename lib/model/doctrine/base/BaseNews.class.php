<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('News', 'doctrine');

/**
 * BaseNews
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property clob $announcement
 * @property string $img_small
 * @property string $img_big
 * @property clob $text
 * @property date $date_of_add
 * @property interger $user_id
 * @property integer $status
 * @property integer $is_important
 * @property User $User
 * 
 * @method integer  getId()           Returns the current record's "id" value
 * @method string   getName()         Returns the current record's "name" value
 * @method clob     getAnnouncement() Returns the current record's "announcement" value
 * @method string   getImgSmall()     Returns the current record's "img_small" value
 * @method string   getImgBig()       Returns the current record's "img_big" value
 * @method clob     getText()         Returns the current record's "text" value
 * @method date     getDateOfAdd()    Returns the current record's "date_of_add" value
 * @method interger getUserId()       Returns the current record's "user_id" value
 * @method integer  getStatus()       Returns the current record's "status" value
 * @method integer  getIsImportant()  Returns the current record's "is_important" value
 * @method User     getUser()         Returns the current record's "User" value
 * @method News     setId()           Sets the current record's "id" value
 * @method News     setName()         Sets the current record's "name" value
 * @method News     setAnnouncement() Sets the current record's "announcement" value
 * @method News     setImgSmall()     Sets the current record's "img_small" value
 * @method News     setImgBig()       Sets the current record's "img_big" value
 * @method News     setText()         Sets the current record's "text" value
 * @method News     setDateOfAdd()    Sets the current record's "date_of_add" value
 * @method News     setUserId()       Sets the current record's "user_id" value
 * @method News     setStatus()       Sets the current record's "status" value
 * @method News     setIsImportant()  Sets the current record's "is_important" value
 * @method News     setUser()         Sets the current record's "User" value
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNews extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('news');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('announcement', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
        $this->hasColumn('img_small', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('img_big', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('text', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
        $this->hasColumn('date_of_add', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'interger',
             'notnull' => true,
             ));
        $this->hasColumn('status', 'boolean', 1, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false
             ));
        $this->hasColumn('is_important', 'boolean', 1, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false
             ));
        $this->hasColumn('sended', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0
             ));
        $this->hasColumn('is_mailing', 'boolean', 1, array(
            'type' => 'boolean',
            'notnull' => true,
            'default' => false
        ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}
