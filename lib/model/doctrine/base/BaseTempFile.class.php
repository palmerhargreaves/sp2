<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TempFile', 'doctrine');

/**
 * BaseTempFile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $file
 * @property User $User
 * 
 * @method integer  getId()      Returns the current record's "id" value
 * @method integer  getUserId()  Returns the current record's "user_id" value
 * @method string   getFile()    Returns the current record's "file" value
 * @method User     getUser()    Returns the current record's "User" value
 * @method TempFile setId()      Sets the current record's "id" value
 * @method TempFile setUserId()  Sets the current record's "user_id" value
 * @method TempFile setFile()    Sets the current record's "file" value
 * @method TempFile setUser()    Sets the current record's "User" value
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTempFile extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('temp_file');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('activity_id', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('file', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('file_object_type', 'string', 255, array(
            'type' => 'string',
            'notnull' => true,
            'length' => 255,
        ));
        $this->hasColumn('file_type', 'string', 255, array(
            'type' => 'string',
            'notnull' => true,
            'length' => 255,
        ));
        $this->hasColumn('file_size', 'integer', 11, array(
            'type' => 'integer',
            'notnull' => false,
            'length' => 11,
            'default' => 0
        ));
        $this->hasColumn('is_external_file', 'boolean', null, array(
            'type' => 'boolean',
            'notnull' => true,
            'default' => false
        ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('Activity', array(
            'local' => 'activity_id',
            'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}
