<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ActivityDealerMails', 'doctrine');

/**
 * BaseActivityDealerMails
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $dealer_id
 * @property integer $activity_id
 * @property string $date_to
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method integer             getDealerId()    Returns the current record's "dealer_id" value
 * @method integer             getActivityId()  Returns the current record's "activity_id" value
 * @method string              getDateTo()      Returns the current record's "date_to" value
 * @method ActivityDealerMails setId()          Sets the current record's "id" value
 * @method ActivityDealerMails setDealerId()    Sets the current record's "dealer_id" value
 * @method ActivityDealerMails setActivityId()  Sets the current record's "activity_id" value
 * @method ActivityDealerMails setDateTo()      Sets the current record's "date_to" value
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseActivityDealerMails extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('activity_dealer_mails');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('dealer_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('activity_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('date_to', 'string', 30, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 30,
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        
        $this->hasOne('Dealer', array(
             'local' => 'dealer_id',
             'foreign' => 'id'));

        $this->hasOne('Activity', array(
             'local' => 'activity_id',
             'foreign' => 'id'));
    }
}