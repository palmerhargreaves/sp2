<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AgreementModelCategoriesFields', 'doctrine');

/**
 * BaseAgreementModelCategoriesFields
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $parent_category_id
 * @property string $name
 * @property string $identifier
 * @property enum $type
 * @property integer $sort
 * @property string $list
 * @property string $units
 * @property string $format_hint
 * @property string $format_expression
 * @property boolean $required
 * @property string $right_format
 * @property boolean $child_field
 * @property boolean $hide
 * @property string $def_value
 * @property boolean $editable
 * @property AgreementModelCategories $AgreementModelCategories
 * 
 * @method integer                        getId()                       Returns the current record's "id" value
 * @method integer                        getParentCategoryId()         Returns the current record's "parent_category_id" value
 * @method string                         getName()                     Returns the current record's "name" value
 * @method string                         getIdentifier()               Returns the current record's "identifier" value
 * @method enum                           getType()                     Returns the current record's "type" value
 * @method integer                        getSort()                     Returns the current record's "sort" value
 * @method string                         getList()                     Returns the current record's "list" value
 * @method string                         getUnits()                    Returns the current record's "units" value
 * @method string                         getFormatHint()               Returns the current record's "format_hint" value
 * @method string                         getFormatExpression()         Returns the current record's "format_expression" value
 * @method boolean                        getRequired()                 Returns the current record's "required" value
 * @method string                         getRightFormat()              Returns the current record's "right_format" value
 * @method boolean                        getChildField()               Returns the current record's "child_field" value
 * @method boolean                        getHide()                     Returns the current record's "hide" value
 * @method string                         getDefValue()                 Returns the current record's "def_value" value
 * @method boolean                        getEditable()                 Returns the current record's "editable" value
 * @method AgreementModelCategories       getAgreementModelCategories() Returns the current record's "AgreementModelCategories" value
 * @method AgreementModelCategoriesFields setId()                       Sets the current record's "id" value
 * @method AgreementModelCategoriesFields setParentCategoryId()         Sets the current record's "parent_category_id" value
 * @method AgreementModelCategoriesFields setName()                     Sets the current record's "name" value
 * @method AgreementModelCategoriesFields setIdentifier()               Sets the current record's "identifier" value
 * @method AgreementModelCategoriesFields setType()                     Sets the current record's "type" value
 * @method AgreementModelCategoriesFields setSort()                     Sets the current record's "sort" value
 * @method AgreementModelCategoriesFields setList()                     Sets the current record's "list" value
 * @method AgreementModelCategoriesFields setUnits()                    Sets the current record's "units" value
 * @method AgreementModelCategoriesFields setFormatHint()               Sets the current record's "format_hint" value
 * @method AgreementModelCategoriesFields setFormatExpression()         Sets the current record's "format_expression" value
 * @method AgreementModelCategoriesFields setRequired()                 Sets the current record's "required" value
 * @method AgreementModelCategoriesFields setRightFormat()              Sets the current record's "right_format" value
 * @method AgreementModelCategoriesFields setChildField()               Sets the current record's "child_field" value
 * @method AgreementModelCategoriesFields setHide()                     Sets the current record's "hide" value
 * @method AgreementModelCategoriesFields setDefValue()                 Sets the current record's "def_value" value
 * @method AgreementModelCategoriesFields setEditable()                 Sets the current record's "editable" value
 * @method AgreementModelCategoriesFields setAgreementModelCategories() Sets the current record's "AgreementModelCategories" value
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAgreementModelCategoriesFields extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('agreement_model_categories_fields');
        $this->hasColumn('id', 'integer', 11, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 11,
             ));
        $this->hasColumn('parent_category_id', 'integer', 11, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 11,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('identifier', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('type', 'enum', 6, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'string',
              1 => 'date',
              2 => 'select',
              3 => 'period',
             ),
             'primary' => false,
             'notnull' => true,
             'length' => 6,
             ));
        $this->hasColumn('sort', 'integer', 11, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'length' => 11,
             ));
        $this->hasColumn('list', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('units', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('format_hint', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('format_expression', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('required', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             ));
        $this->hasColumn('right_format', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('child_field', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             ));
        $this->hasColumn('hide', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             ));
        $this->hasColumn('def_value', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 80,
             ));
        $this->hasColumn('editable', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             ));


        $this->index('field', array(
             'fields' => 
             array(
              0 => 'parent_category_id',
             ),
             ));
        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('AgreementModelCategories', array(
             'local' => 'parent_category_id',
             'foreign' => 'id'));
    }
}