<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('DealerActivitiesStatsData', 'doctrine');

/**
 * BaseDealerActivitiesStatsData
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $activity_id
 * @property integer $dealer_stat_id
 * @property boolean $status
 * @property integer $value
 * @property string $field_name
 * 
 * @method integer                   getId()             Returns the current record's "id" value
 * @method integer                   getActivityId()     Returns the current record's "activity_id" value
 * @method integer                   getDealerStatId()   Returns the current record's "dealer_stat_id" value
 * @method boolean                   getStatus()         Returns the current record's "status" value
 * @method integer                   getValue()          Returns the current record's "value" value
 * @method string                    getFieldName()      Returns the current record's "field_name" value
 * @method DealerActivitiesStatsData setId()             Sets the current record's "id" value
 * @method DealerActivitiesStatsData setActivityId()     Sets the current record's "activity_id" value
 * @method DealerActivitiesStatsData setDealerStatId()   Sets the current record's "dealer_stat_id" value
 * @method DealerActivitiesStatsData setStatus()         Sets the current record's "status" value
 * @method DealerActivitiesStatsData setValue()          Sets the current record's "value" value
 * @method DealerActivitiesStatsData setFieldName()      Sets the current record's "field_name" value
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDealerActivitiesStatsData extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('dealer_activities_stats_data');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('activity_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('dealer_stat_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('status', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('value', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('field_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('year', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('q1', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('q2', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('q3', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('q4', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('total_completed', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('total_in_work_dealers', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('total_completed_dealers', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();

        $this->hasMany('DealerActivitiesStats', array(
            'local' => 'dealer_stat_id',
            'foreign' => 'id'));

        $this->hasOne('Activity', array(
            'local' => 'activity_id',
            'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}