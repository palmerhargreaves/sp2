<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UsersPost', 'doctrine');

/**
 * BaseUsersPost
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $department
 * @property string $post
 * @property integer $user_id
 * 
 * @method integer   getId()         Returns the current record's "id" value
 * @method string    getDepartment() Returns the current record's "department" value
 * @method string    getPost()       Returns the current record's "post" value
 * @method integer   getUserId()     Returns the current record's "user_id" value
 * @method UsersPost setId()         Sets the current record's "id" value
 * @method UsersPost setDepartment() Sets the current record's "department" value
 * @method UsersPost setPost()       Sets the current record's "post" value
 * @method UsersPost setUserId()     Sets the current record's "user_id" value
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsersPost extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('users_post');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('department', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('post', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}