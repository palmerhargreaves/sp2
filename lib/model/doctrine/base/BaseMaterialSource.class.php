<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MaterialSource', 'doctrine');

/**
 * BaseMaterialSource
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $material_id
 * @property string $name
 * @property string $file
 * @property Material $Material
 * 
 * @method integer        getId()          Returns the current record's "id" value
 * @method integer        getMaterialId()  Returns the current record's "material_id" value
 * @method string         getName()        Returns the current record's "name" value
 * @method string         getFile()        Returns the current record's "file" value
 * @method Material       getMaterial()    Returns the current record's "Material" value
 * @method MaterialSource setId()          Sets the current record's "id" value
 * @method MaterialSource setMaterialId()  Sets the current record's "material_id" value
 * @method MaterialSource setName()        Sets the current record's "name" value
 * @method MaterialSource setFile()        Sets the current record's "file" value
 * @method MaterialSource setMaterial()    Sets the current record's "Material" value
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMaterialSource extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('material_source');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('material_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('file', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('downloads', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));

        $this->option('orderBy', 'id asc');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Material', array(
             'local' => 'material_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}