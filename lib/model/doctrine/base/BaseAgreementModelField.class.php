<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AgreementModelField', 'doctrine');

/**
 * BaseAgreementModelField
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $model_type_id
 * @property string $name
 * @property string $identifier
 * @property enum $type
 * @property string $units
 * @property string $format_hint
 * @property string $format_expression
 * @property boolean $required
 * @property string $right_format
 * @property integer $sort
 * @property string $list
 * @property AgreementModelType $ModelType
 * @property Doctrine_Collection $Values
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method integer             getModelTypeId()       Returns the current record's "model_type_id" value
 * @method string              getName()              Returns the current record's "name" value
 * @method string              getIdentifier()        Returns the current record's "identifier" value
 * @method enum                getType()              Returns the current record's "type" value
 * @method string              getUnits()             Returns the current record's "units" value
 * @method string              getFormatHint()        Returns the current record's "format_hint" value
 * @method string              getFormatExpression()  Returns the current record's "format_expression" value
 * @method boolean             getRequired()          Returns the current record's "required" value
 * @method string              getRightFormat()       Returns the current record's "right_format" value
 * @method integer             getSort()              Returns the current record's "sort" value
 * @method string              getList()              Returns the current record's "list" value
 * @method AgreementModelType  getModelType()         Returns the current record's "ModelType" value
 * @method Doctrine_Collection getValues()            Returns the current record's "Values" collection
 * @method AgreementModelField setId()                Sets the current record's "id" value
 * @method AgreementModelField setModelTypeId()       Sets the current record's "model_type_id" value
 * @method AgreementModelField setName()              Sets the current record's "name" value
 * @method AgreementModelField setIdentifier()        Sets the current record's "identifier" value
 * @method AgreementModelField setType()              Sets the current record's "type" value
 * @method AgreementModelField setUnits()             Sets the current record's "units" value
 * @method AgreementModelField setFormatHint()        Sets the current record's "format_hint" value
 * @method AgreementModelField setFormatExpression()  Sets the current record's "format_expression" value
 * @method AgreementModelField setRequired()          Sets the current record's "required" value
 * @method AgreementModelField setRightFormat()       Sets the current record's "right_format" value
 * @method AgreementModelField setSort()              Sets the current record's "sort" value
 * @method AgreementModelField setList()              Sets the current record's "list" value
 * @method AgreementModelField setModelType()         Sets the current record's "ModelType" value
 * @method AgreementModelField setValues()            Sets the current record's "Values" collection
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAgreementModelField extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('agreement_model_field');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('parent_category_id', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('field_parent_id', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('model_type_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('identifier', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'string',
              1 => 'date',
              2 => 'select',
              3 => 'period',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('units', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('format_hint', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('format_expression', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('required', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             'notnull' => true,
             ));
        $this->hasColumn('right_format', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('sort', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('list', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('child_field', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
         $this->hasColumn('hide', 'boolean', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('def_value', 'string', 80, array(
            'type' => 'string',
            'notnull' => true,
            'length' => 80,
        ));
        $this->hasColumn('editable', 'boolean', null, array(
            'type' => 'boolean',
            'notnull' => true,
            'default' => false,
        ));
        $this->hasColumn('position', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));

        $this->option('orderBy', 'sort asc, id asc');
        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');

        $this->setSubClasses(array(
             'AgreementModelStringField' => 
             array(
              'type' => 'string',
             ),
             'AgreementModelDateField' => 
             array(
              'type' => 'date',
             ),
             'AgreementModelListField' => 
             array(
              'type' => 'select',
             ),
             'AgreementModelPeriodField' => 
             array(
              'type' => 'period',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('AgreementModelType as ModelType', array(
             'local' => 'model_type_id',
             'foreign' => 'id'));

        $this->hasMany('AgreementModelValue as Values', array(
             'local' => 'id',
             'foreign' => 'field_id'));

        $this->hasOne('AgreementModelCategories', array(
            'local' => 'parent_category_id',
            'foreign' => 'id'));

        $this->hasOne('AgreementModelCategories as Category', array(
            'local' => 'parent_category_id',
            'foreign' => 'id'));

        $this->hasMany('AgreementModelField as ChildFields', array(
            'id' => 'id',
            'foreign' => 'field_parent_id'));
    }
}
