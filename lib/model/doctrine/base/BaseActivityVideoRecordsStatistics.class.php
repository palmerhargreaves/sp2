<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ActivityVideoRecordsStatistics', 'doctrine');

/**
 * BaseActivityVideoRecordsStatistics
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property integer $id
 * @property integer $activity_id
 * @property string $header
 * @property Doctrine_Collection $ActivityVideoRecordsStatisticsHeaders
 *
 * @method integer                        getId()                                    Returns the current record's "id" value
 * @method integer                        getActivityId()                            Returns the current record's "activity_id" value
 * @method string                         getHeader()                                Returns the current record's "header" value
 * @method Doctrine_Collection            getActivityVideoRecordsStatisticsHeaders() Returns the current record's "ActivityVideoRecordsStatisticsHeaders" collection
 * @method ActivityVideoRecordsStatistics setId()                                    Sets the current record's "id" value
 * @method ActivityVideoRecordsStatistics setActivityId()                            Sets the current record's "activity_id" value
 * @method ActivityVideoRecordsStatistics setHeader()                                Sets the current record's "header" value
 * @method ActivityVideoRecordsStatistics setActivityVideoRecordsStatisticsHeaders() Sets the current record's "ActivityVideoRecordsStatisticsHeaders" collection
 *
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseActivityVideoRecordsStatistics extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('activity_video_records_statistics');
        $this->hasColumn('id', 'integer', null, array(
            'type' => 'integer',
            'primary' => true,
            'autoincrement' => true,
        ));
        $this->hasColumn('activity_id', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('header', 'string', 255, array(
            'type' => 'string',
            'length' => 255,
            'notnull' => true,
        ));
        $this->hasColumn('description', 'string', null, array(
            'type' => 'clob',
            'notnull' => true,
        ));
        $this->hasColumn('not_using_importer', 'boolean', null, array(
            'type' => 'boolean',
            'default' => false,
            'notnull' => true,
        ));
        $this->hasColumn('allow_statistic_pre_check', 'boolean', null, array(
            'type' => 'boolean',
            'default' => false,
            'notnull' => true,
        ));

        $this->hasColumn('last_updated_at', 'string', 255, array(
            'type' => 'string',
            'length' => 255,
            'notnull' => true,
        ));

        $this->index('activity', array(
            'fields' =>
                array(
                    0 => 'activity_id',
                ),
        ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();

        $this->hasOne('Activity', array(
            'local' => 'activity_id',
            'foreign' => 'id'));

        $this->hasMany('ActivityVideoRecordsStatisticsHeaders', array(
            'local' => 'id',
            'foreign' => 'parent_id',
            'cascade' => array(
                0 => 'delete',
            )));
    }
}
