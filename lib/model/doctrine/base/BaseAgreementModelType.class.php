<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AgreementModelType', 'doctrine');

/**
 * BaseAgreementModelType
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $identifier
 * @property string $report_field_description
 * @property boolean $concept
 * @property Doctrine_Collection $Fields
 * @property Doctrine_Collection $Models
 * @property Doctrine_Collection $Blanks
 * 
 * @method integer             getId()                       Returns the current record's "id" value
 * @method string              getName()                     Returns the current record's "name" value
 * @method string              getIdentifier()               Returns the current record's "identifier" value
 * @method string              getReportFieldDescription()   Returns the current record's "report_field_description" value
 * @method boolean             getConcept()                  Returns the current record's "concept" value
 * @method Doctrine_Collection getFields()                   Returns the current record's "Fields" collection
 * @method Doctrine_Collection getModels()                   Returns the current record's "Models" collection
 * @method Doctrine_Collection getBlanks()                   Returns the current record's "Blanks" collection
 * @method AgreementModelType  setId()                       Sets the current record's "id" value
 * @method AgreementModelType  setName()                     Sets the current record's "name" value
 * @method AgreementModelType  setIdentifier()               Sets the current record's "identifier" value
 * @method AgreementModelType  setReportFieldDescription()   Sets the current record's "report_field_description" value
 * @method AgreementModelType  setConcept()                  Sets the current record's "concept" value
 * @method AgreementModelType  setFields()                   Sets the current record's "Fields" collection
 * @method AgreementModelType  setModels()                   Sets the current record's "Models" collection
 * @method AgreementModelType  setBlanks()                   Sets the current record's "Blanks" collection
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAgreementModelType extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('agreement_model_type');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('identifier', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('agreement_type', 'enum', null, array(
            'type' => 'enum',
            'values' =>
                array(
                    0 => 'simple',
                    1 => 'by_steps_2',
                ),
        ));
        $this->hasColumn('report_field_description', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('field_description', 'string', 255, array(
            'type' => 'string',
            'notnull' => false,
            'length' => 255,
        ));
        $this->hasColumn('concept', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             'notnull' => true,
             ));
        $this->hasColumn('is_photo_report', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             'notnull' => true,
             ));
        $this->hasColumn('parent_category_id', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));
        $this->hasColumn('status', 'boolean', null, array(
            'type' => 'boolean',
            'notnull' => true,
            'default' => false,
        ));
        $this->hasColumn('position', 'integer', null, array(
            'type' => 'integer',
            'notnull' => true,
        ));

        $this->index('name', array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $this->index('concept', array(
             'fields' => 
             array(
              0 => 'concept',
             ),
             ));
        $this->option('orderBy', 'name asc');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('AgreementModelField as Fields', array(
             'local' => 'id',
             'foreign' => 'model_type_id'));

        $this->hasMany('AgreementModel as Models', array(
             'local' => 'id',
             'foreign' => 'model_type_id'));

        $this->hasMany('AgreementModelBlank as Blanks', array(
             'local' => 'id',
             'foreign' => 'model_type_id'));

        $this->hasOne('AgreementModelCategories', array(
            'local' => 'parent_category_id',
            'foreign' => 'id'
        ));
    }
}
