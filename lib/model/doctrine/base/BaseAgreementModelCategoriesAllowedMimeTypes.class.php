<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AgreementModelCategoriesAllowedMimeTypes', 'doctrine');

/**
 * BaseAgreementModelCategoriesAllowedMimeTypes
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $category_id
 * @property integer $mime_type_id
 * 
 * @method integer                                  getId()           Returns the current record's "id" value
 * @method integer                                  getCategoryId()   Returns the current record's "category_id" value
 * @method integer                                  getMimeTypeId()   Returns the current record's "mime_type_id" value
 * @method AgreementModelCategoriesAllowedMimeTypes setId()           Sets the current record's "id" value
 * @method AgreementModelCategoriesAllowedMimeTypes setCategoryId()   Sets the current record's "category_id" value
 * @method AgreementModelCategoriesAllowedMimeTypes setMimeTypeId()   Sets the current record's "mime_type_id" value
 * 
 * @package    Servicepool2.0
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAgreementModelCategoriesAllowedMimeTypes extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('agreement_model_categories_allowed_mime_types');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('category_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             'notnull' => true,
             ));
        $this->hasColumn('mime_type_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             'notnull' => true,
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();

        $this->hasOne('AgreementModelCategories as Category', array(
            'local' => 'category_id',
            'foreign' => 'id'));

        $this->hasOne('MimeTypes as MimeType', array(
            'local' => 'mime_type_id',
            'foreign' => 'id'));
    }
}
