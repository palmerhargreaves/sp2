<?php

/**
 * DialogsTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class DialogsTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object DialogsTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Dialogs');
    }

    public static function getLastActiveInfoDialog($onFirstLogin = false)
    {

        $limits = array();
        $limitsResult = DialogsUsersLimitsTable::getInstance()
            ->createQuery()
            ->select('dialog_id')
            ->execute(array(), Doctrine_Core::HYDRATE_ARRAY);
        foreach($limitsResult as $limit) {
            $limits[] = $limit['dialog_id'];
        }

        $today = D::toDb(date('Y-m-d'));
        $query = self::getInstance()
            ->createQuery()
            ->where('status = ?', 1)
            ->andWhere('start <= ?', $today)
            ->andWhere('end >= ?', $today)
            ->andWhereNotIn('id', $limits)
            ->orderBy('id DESC');
            //->limit(1);

        if($onFirstLogin) {
            $query->andWhere('on_who_just_registered = ?', true);
        } else {
            $query->andWhere('on_who_just_registered = ?', false);
        }

        return $query->execute();
    }

    public static function getBindedDialog(User $user) {
        $today = D::toDb(date('Y-m-d'));

        $binded = DialogsUsersLimitsTable::getInstance()
            ->createQuery()
            ->where('post_type = ?', $user->getGroup()->getId())
            ->orderBy('dialog_id DESC')
                ->execute();

        if(count($binded) == 0) {
            $binded = DialogsUsersLimitsTable::getInstance()
                ->createQuery()
                ->where('user_id = ?', $user->getId())
                ->orderBy('dialog_id DESC')
                ->execute();
        }

        foreach($binded as $bind) {
            $dialogData = self::getInstance()
                ->createQuery()
                ->where('status = ?', 1)
                ->andWhere('start <= ?', $today)
                ->andWhere('end >= ?', $today)
                ->andWhere('id = ?', $bind->getDialogId())
                ->orderBy('id DESC')
                ->limit(1)
                    ->fetchOne();
            if($dialogData) {
                return $dialogData;
            }
        }

        return null;
    }

}